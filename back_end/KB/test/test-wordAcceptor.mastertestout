Building new state, numbered 100 while dealing with  state 73
New word difference has length 1
Substring closed word difference machine has 110 states.
Word difference machine has 110 states.
Trying to build word acceptor.
Building new state, numbered 100 while finding targets of state 94
Word acceptor has 106 states before minimization,
and 26 afterwards.
Trying to build multipliers.
gpcheckmult returns no. Looping.
Substring closed word difference machine has 140 states.
Pass no. 2 though loop.
Word difference machine has 140 states.
Trying to build word acceptor.
Building new state, numbered 100 while finding targets of state 93
Word acceptor has 107 states before minimization,
and 26 afterwards.
Trying to build multipliers.
gpcheckmult return yes.
Group < a, b ; a b a b a b a b a b a b,b^3,a^2 > is proved weighted lex automatic
with weights <2,2,2,1> and order <1,-1,2,-2>
Minimized word acceptor, with 26 states:-
unnamed_min := rec(
           isFSA := true,
        alphabet := rec(
                type := "identifiers",
                size := 4,
                  format := "dense",
                   names := [a,a^-1,b,b^-1]
               ),
          states := rec(
                type := "simple",
                size := 26
               ),
           flags := ["DFA","minimized"],
         initial := [1],
       accepting := [1..26],
           table := rec(
      numTransitions := 38,
              format := "dense deterministic",
         transitions := [[2,0,3,4],
                         [0,0,5,6],
                         [7,0,0,0],
                         [8,0,0,0],
                         [9,0,0,0],
                         [10,0,0,0],
                         [0,0,11,6],
                         [0,0,11,12],
                         [0,0,13,6],
                         [0,0,11,14],
                         [15,0,0,0],
                         [16,0,0,0],
                         [17,0,0,0],
                         [18,0,0,0],
                         [0,0,19,6],
                         [0,0,20,21],
                         [0,0,0,22],
                         [0,0,23,19],
                         [0,0,0,0],
                         [24,0,0,0],
                         [19,0,0,0],
                         [25,0,0,0],
                         [26,0,0,0],
                         [0,0,19,12],
                         [0,0,13,14],
                         [0,0,19,14]
                   ]
               )
);
General multiplier:-
/tmp/KBmagAAAa02813.gm := rec(
           isFSA := true,
        alphabet := rec(
                type := "product",
                size := 24,
               arity := 2,
             padding := _,
                base := rec(
                    type := "identifiers",
                    size := 4,
                  format := "dense",
                   names := [a,a^-1,b,b^-1]
                   )
               ),
          states := rec(
                type := "labeled",
                size := 67,
                labels := rec(
                      type := "identifiers",
                      size := 5,
                      format := "dense",
                      names := [a,a^-1,b,b^-1,_]
               ),
          format := "sparse",
     setToLabels := [
	[1,5],
	[2,5],
	[5,1],
	[7,5],
	[8,3],
	[9,4],
	[11,4],
	[12,5],
	[13,3],
	[14,5],
	[15,5],
	[19,5],
	[23,5],
	[24,5],
	[25,5],
	[29,5],
	[33,5],
	[34,5],
	[35,5],
	[39,5],
	[43,5],
	[44,5],
	[45,5],
	[52,5],
	[59,5],
	[60,5],
	[61,5],
	[62,5],
	[65,5],
	[66,5],
	[67,5]
              ]
               ),
           flags := ["DFA"],
         initial := [1],
       accepting := [],
           table := rec(
      numTransitions := 188,
              format := "sparse",
         transitions := [[[1,2],[3,3],[4,4],[5,5],[11,6],[13,7],
                          [14,8],[15,9],[16,10],[18,11],[19,12],[20,13],[21,5],
                          [23,13],[24,9]],
                         [[13,14],[14,8],[15,9],[18,11],[19,15],[20,13],
                          [23,13],[24,9]],
                         [[16,16]],
                         [[11,17]],
                         [],
                         [[4,18]],
                         [[1,19],[5,5],[21,5]],
                         [[1,20]],
                         [],
                         [[3,21]],
                         [[1,22]],
                         [[1,23],[5,5],[21,5]],
                         [],
                         [[1,24],[5,5],[21,5]],
                         [[1,25],[5,5],[21,5]],
                         [[3,26]],
                         [[4,27]],
                         [[11,28]],
                         [[13,29],[14,8],[15,9],[18,11],[19,15],[20,13],
                          [23,13],[24,9]],
                         [[18,30]],
                         [[16,31]],
                         [[14,32]],
                         [[13,29],[14,8],[15,9],[18,11],[19,33],[20,13],
                          [23,13],[24,9]],
                         [[13,34],[14,8],[15,9],[18,11],[19,15],[20,13],
                          [23,13],[24,9]],
                         [[13,29],[14,8],[15,9],[18,11],[19,35],[20,13],
                          [23,13],[24,9]],
                         [[16,36]],
                         [[11,37]],
                         [[4,38]],
                         [[1,39],[5,5],[21,5]],
                         [[1,40]],
                         [[3,41]],
                         [[1,42]],
                         [[1,43],[5,5],[21,5]],
                         [[1,44],[5,5],[21,5]],
                         [[1,45],[5,5],[21,5]],
                         [[3,46],[4,47]],
                         [[3,48],[4,49]],
                         [[11,50],[16,51]],
                         [[13,52],[14,13],[15,9],[18,9],[19,15],[20,13],
                          [23,13],[24,9]],
                         [[18,53],[19,54]],
                         [[11,55],[16,56]],
                         [[14,57],[19,58]],
                         [[13,59],[14,13],[15,9],[18,9],[19,60],[20,13],
                          [23,13],[24,9]],
                         [[19,61],[20,13],[24,9]],
                         [[13,62],[14,13],[15,9],[18,9],[19,52],[20,13],
                          [23,13],[24,9]],
                         [[20,5]],
                         [[11,16]],
                         [[16,17]],
                         [[16,9],[21,13]],
                         [[24,5]],
                         [[3,18]],
                         [],
                         [[5,46]],
                         [[1,63]],
                         [[4,21]],
                         [[4,13],[5,9]],
                         [[21,50]],
                         [[1,64]],
                         [[1,65],[5,5],[21,5]],
                         [[1,52],[5,5],[21,5]],
                         [[1,66],[5,5],[21,5]],
                         [[1,67],[5,5],[21,5]],
                         [[13,30]],
                         [[13,32]],
                         [[13,52],[14,13],[15,9],[18,9],[19,33],[20,13],
                          [23,13],[24,9]],
                         [[13,34],[14,8],[15,9],[18,11],[19,35],[20,13],
                          [23,13],[24,9]],
                         [[13,52],[14,13],[15,9],[18,9],[19,35],[20,13],
                          [23,13],[24,9]]
               ]
               )
);
